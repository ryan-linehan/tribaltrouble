# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: Build + Publish

on:
  push:
    branches: [ "new_main" ]
  pull_request:
    branches: [ "new_main" ]
  workflow_dispatch:

jobs:
  format-check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Check Format
      run: ant -noinput -buildfile build.xml format-check

  build-linux:

    runs-on: ubuntu-latest
    needs: format-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Build with Ant
      run: ant -noinput -buildfile tt/build.xml build-linux
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: linux
        path: tt/build/dist/linux/TribalTrouble-x86_64.AppImage

  build-windows:
  
    runs-on: windows-latest
    needs: format-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Build with Ant
      run: ant -noinput -buildfile tt/build.xml build-windows
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: windows
        path: tt/build/dist/windows/
    
  build-mac-x86:
  
    runs-on: macos-13
    needs: format-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Build mac binaries
      run: ant -noinput -buildfile tt/build.xml build-mac-x86
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: mac-x86
        path: tt/build/dist/macosx-x86/

  build-mac-arm64:
  
    runs-on: macos-latest
    needs: format-check

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Build mac binaries
      run: ant -noinput -buildfile tt/build.xml build-mac-arm64
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: mac-arm64
        path: tt/build/dist/macosx-arm64/

# Steam upload job:
#  - https://github.com/game-ci/steam-deploy#configuration
#  - https://partner.steamgames.com/doc/sdk/uploading#1
  deploy-to-steam:
    if: github.ref == 'refs/heads/steam'
    needs: [build-mac-arm64, build-mac-x86, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: windows
        path: tt/build/dist/windows/
    - name: Download Mac x86 Artifact
      uses: actions/download-artifact@v4
      with:
        name: mac-x86
        path: tt/build/dist/macosx-x86/
    - name: Download Mac arm64 Artifact
      uses: actions/download-artifact@v4
      with:
        name: mac-arm64
        path: tt/build/dist/macosx-arm64/
    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: linux
        path: tt/build/dist/linux/
    - name: Unzip Mac Build
      run: |
        unzip -o build/mac/.zip -d build/mac/
        rm build/mac/.zip
    - name: Upload to steam
      uses: game-ci/steam-deploy@v3
      with:
        username: ${{ vars.STEAM_USER }}
        configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
        appId: ${{ vars.STEAM_APP_ID }}
        buildDescription: v1.2.3
        rootPath: build
        depot1Path: windows
        depot2Path: mac
        depot3Path: linux
        releaseBranch: prerelease
